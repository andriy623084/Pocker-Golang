version: '3'

services:

  game-api:
    build:
      context: ./../game-api
      dockerfile: ./../game-api/game-api.dockerfile
    restart: always
    ports:
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1

  authentication-service:
    build: 
      context: ./../authentication-service
      dockerfile: ./../authentication-service/authentication-service.dockerfile
    restart: always
    ports:
      - "5442:5442"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"

  session-redis-service:
    build: 
      context: ./../session-redis-service
      dockerfile: ./../session-redis-service/session-redis-service.dockerfile
    restart: always
    ports:
      - "4111:4111"
    deploy:
      mode: replicated
      replicas: 1
  
  # rabbitmq:
  #   image: 'rabbitmq:3.9-alpine'
  #   ports:
  #     - "5672:5672"
  #   deploy:
  #     mode: replicated
  #     replicas: 1
  #   volumes:
  #     - ./db-data/rabbitmq/:/var/lib/rabbitmq/

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - ./db-data/redis/:/data

  postgres:
    image: 'postgres:14.0'
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data

  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db
